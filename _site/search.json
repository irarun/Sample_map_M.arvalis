[
  {
    "objectID": "map.html",
    "href": "map.html",
    "title": "Map",
    "section": "",
    "text": "Below you can find the sample map.\n\n\nShow the code\nlibrary(leaflet)\nlibrary(leaflet.minicharts)\nlibrary(widgetframe)\nlibrary(sf)\nlibrary(readr)\nlibrary(dplyr)\nlibrary(RColorBrewer)\nlibrary(xfun)\nlibrary(writexl)\n\n\n### prepearing the data ###\n\n# convert lines to UTF-8 (replacing problematic chars)\nraw_lines &lt;- readLines(\"onlyMicrotus_samplesV425_improved4.txt\", encoding = \"latin1\")\nclean_lines &lt;- iconv(raw_lines, from = \"latin1\", to = \"UTF-8\", sub = \"\")\n\n# Save cleaned file\nwriteLines(clean_lines, \"onlyMicrotus_samplesV425_cleaned.txt\")\n\nrawTable &lt;- read_tsv(\"onlyMicrotus_samplesV425_cleaned.txt\",\n  col_types = cols(\n    #Add = col_character(),\n    Published = col_character(),\n    .default = col_guess()))  # let other columns be guessed\n\n#nrow(rawTable)\n#colnames(rawTable)\ncols &lt;- c(\"Genus\", \"Species\", \"Samplinglocation\", \"Country\", \"Sample number (on tube or bag)\", \"Individual number\", \"Extraction y/n?\", \"Place of capture\", \"Latitude\", \"Longitude\", \"Specimen-20\", \"DNADNA_.Number.in..20\", \"RNARNA_.Number.in..80\", \"Published\")\n# Other cols: \"Microsat\", \"Cytochrom b\", \"GewebeRack\", \"Number in Fridge oder -20C oder -80C\", \"Lung.Tissue\", \"Positive? (TULV)\", \"Published\")\n\nData &lt;- rawTable[, cols]\n#View(Data)\n\n# filter data for species \"arvalis\"\narvalis_data &lt;- Data %&gt;% filter(Species == \"arvalis\")\n\n# replace non-breaking spaces (\\u00A0) and any spaces around numbers in Longitude and Latitude\narvalis_data$Longitude &lt;- gsub(\"\\u00A0\", \"\", arvalis_data$Longitude)\narvalis_data$Latitude  &lt;- gsub(\"\\u00A0\", \"\", arvalis_data$Latitude)\n# Convert coordinates to numeric if needed\narvalis_data$Longitude &lt;- as.numeric(as.character(arvalis_data$Longitude))\narvalis_data$Latitude  &lt;- as.numeric(as.character(arvalis_data$Latitude))\n#View(arvalis_data)\n\n# samples to add (color in red samples from locations that I plan to sequence):\nadd_samples &lt;- c(\"MarFSi01\",\"MarFSJ456\", \"MarFTr01\",\"MarFCm04\",\n                 \"MarFCh05\",\"MarFCm01\",\"MarFM05\",\n                 \"MarGBGGo01\",\"MarGBGCh01\",\"MarGBGAt04\",\"MarGBGAe01\")\n\narvalis_data &lt;- arvalis_data %&gt;%\n  mutate(\n    Published = trimws(as.character(Published)),\n    Add_marked = `Individual number` %in% add_samples)\n#View(arvalis_data)\n\n# summarise by coordinate and assign color priority\ncoords_summary &lt;- arvalis_data %&gt;%\n  filter(!is.na(Latitude), !is.na(Longitude)) %&gt;%\n  group_by(Longitude, Latitude) %&gt;%\n  summarise(\n    sample_count = n(),\n    countries = paste(unique(Country), collapse = \", \"),\n    samples_info = list(\n      tibble(\n        sample_name = `Individual number`,\n        dna = DNADNA_.Number.in..20,\n        rna = RNARNA_.Number.in..80,\n        Frosen_body = `Specimen-20`)),\n    Location = Samplinglocation,\n    has_add_sample = any(Add_marked),\n  has_published = any(Published != \"\"),\n    color = case_when(\n      has_add_sample ~ \"red\",\n      has_published ~ \"green\",\n      TRUE ~ \"darkgrey\"),\n  .groups = \"drop\")\n\n#View(coords_summary)\n\n# color each sample based on presence/absence of frozen specimen or DNA/RNA\ncolor_sample_name &lt;- function(sample_name, Frosen_body) {\n#  has_dna &lt;- !is.na(dna) & dna != \"\"\n#  has_rna &lt;- !is.na(rna) & rna != \"\"\n  has_body &lt;- !is.na(Frosen_body) && Frosen_body != \"\"\n  \n  ### change here so that frozen body is visible\n  color &lt;- if (has_body) {\"blue\"}\n#    if (has_dna & has_rna) {\"orange\"}  \n#    else if (has_dna) {\"blue\"}\n#    else if (has_rna) {\"violet\"}\n    else {\"black\"}\n  paste0('&lt;span style=\"color:', color, ';\"&gt;', sample_name, '&lt;/span&gt;')}\n\ncoords_summary &lt;- coords_summary %&gt;%\n  rowwise() %&gt;%\n  mutate(\n    samples_colored = paste(\n      sapply(1:nrow(samples_info), function(i) {\n        color_sample_name(\n          samples_info$sample_name[i],\n          samples_info$Frosen_body[i])}),\n#          samples_info$dna[i],\n#          samples_info$rna[i]\n      collapse = \"&lt;br&gt;\")) %&gt;%\n  ungroup()\n\n# split into three color groups\nred_dots &lt;- coords_summary %&gt;% filter(color == \"red\")\ngreen_dots &lt;- coords_summary %&gt;% filter(color == \"green\")\ngrey_dots &lt;- coords_summary %&gt;% filter(color == \"darkgrey\")\n\n\n### creating the map ###\n\n# base map\nmap &lt;- leaflet() %&gt;%\n  setView(lat = 49.76666667, lng = 0.516666667, zoom = 7) %&gt;%\n  addTiles()\n\n# add grey dots first (bottom layer)\nmap &lt;- map %&gt;%\n  addCircleMarkers(\n    data = grey_dots,\n    lng = ~Longitude, lat = ~Latitude,\n    label = ~Location,\n    color = \"darkgrey\",\n    radius = ~5,  # + sample_count / 20,\n    weight = 1, opacity = 1, fillOpacity = 0.5,\n    popup = ~paste0(\n      \"&lt;b&gt;Coordinates:&lt;/b&gt; \", Latitude, \", \", Longitude, \"&lt;br&gt;\",\n      \"&lt;b&gt;Samples at this location:&lt;/b&gt; \", sample_count, \"&lt;br&gt;\",\n      \"&lt;b&gt;Country:&lt;/b&gt; \", countries, \"&lt;br&gt;\",\n      \"&lt;b&gt;Location:&lt;/b&gt; \", Location, \"&lt;br&gt;\",\n      \"&lt;b&gt;Sample IDs:&lt;/b&gt;&lt;br&gt;\", samples_colored))\n#label = ~paste0(\"Lat: \", Latitude, \", Lon: \", Longitude)\n\n# add green dots (middle layer)\nmap &lt;- map %&gt;%\n  addCircleMarkers(\n    data = green_dots,\n    lng = ~Longitude, lat = ~Latitude,\n    label = ~Location,\n    color = \"green\",\n    radius = ~5,  # + sample_count / 20,\n    weight = 1, opacity = 1, fillOpacity = 0.8,\n    popup = ~paste0(\n      \"&lt;b&gt;Coordinates:&lt;/b&gt; \", Latitude, \", \", Longitude, \"&lt;br&gt;\",\n      \"&lt;b&gt;Samples at this location:&lt;/b&gt; \", sample_count, \"&lt;br&gt;\",\n      \"&lt;b&gt;Countries:&lt;/b&gt; \", countries, \"&lt;br&gt;\",\n      \"&lt;b&gt;Location:&lt;/b&gt; \", Location, \"&lt;br&gt;\",\n      \"&lt;b&gt;Sample IDs:&lt;/b&gt;&lt;br&gt;\", samples_colored))\n\n# add red dots last (top layer)\nmap &lt;- map %&gt;%\n  addCircleMarkers(\n    data = red_dots,\n    lng = ~Longitude, lat = ~Latitude,\n    label = ~Location,\n    color = \"red\",\n    radius = ~5, # + sample_count / 20\n    weight = 1, opacity = 1, fillOpacity = 0.9,\n    popup = ~paste0(\n      \"&lt;b&gt;Coordinates:&lt;/b&gt; \", Latitude, \", \", Longitude, \"&lt;br&gt;\",\n      \"&lt;b&gt;Samples at this location:&lt;/b&gt; \", sample_count, \"&lt;br&gt;\",\n      \"&lt;b&gt;Countries:&lt;/b&gt; \", countries, \"&lt;br&gt;\",\n      \"&lt;b&gt;Location:&lt;/b&gt; \", Location, \"&lt;br&gt;\",\n      \"&lt;b&gt;Sample IDs:&lt;/b&gt;&lt;br&gt;\", samples_colored))\n\n# add legends\nmap &lt;- map %&gt;%\n   addLegend(\n    position = \"bottomleft\",\n    colors = c(\"darkgrey\", \"green\", \"red\"),\n    labels = c(\"Sampled locations\", \"Wang&Heckel(2023/25)\", \"Samples to add\"),\n    title = \"Dot color legend\",\n    opacity = 1) %&gt;%\n  addLegend(\n    position = \"topright\",\n    colors = \"blue\",  # colors = c(\"blue\", \"violet\", \"orange\"),\n    labels = \"Frozen specimen at -20\",  # labels = c(\"DNA extracted\", \"RNA extracted\", \"DNA & RNA extracted\"),\n    title = \"Sample ID color legend\",\n    opacity = 1)\n\nmap"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This site contains info about my project.\n\n\nShow the code\n1 + 1\n\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PhD project",
    "section": "",
    "text": "This project explores the genomics of Microtus arvalis on isolated islands."
  }
]